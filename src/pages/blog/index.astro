---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../consts';
import { getCollection } from 'astro:content';
import FormattedDate from '../../components/FormattedDate.astro';
import MarkdownIt from 'markdown-it';
const posts = (await getCollection('blog')).sort(
	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);
const postCount = posts.length;
import { getBasePath } from '../../components/utils/basepath.js';
const basePath = getBasePath();
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
		<style>
			main {
				width: auto;
			}
			section ul {
				display: flex;
				flex-wrap: wrap;
				gap: 1rem;
				margin: 0;
				padding: 0;
				
			}
			/* ul li {
				width: calc(50% - 1rem);
			} */
			ul li * {
				text-decoration: none;
				transition: 0.2s ease;
			}
			/* ul li:first-child {
				width: 100%;
				margin-bottom: 1rem;
				text-align: center;
			}
			ul li:first-child img {
				width: 100%;
			}
			ul li:first-child .title {
				font-size: 2.369rem;
			} */
			ul li img {
				margin-bottom: 0.5rem;
				border-radius: 12px;
				width: 17rem;
				height: 10rem;
			}
			.accent {
				
				display: flex;
			}
			.title {
				margin: 0;
				color: rgb(var(--black));
				line-height: 1;
			}
			.date {
				margin: 0;
				color: rgb(var(--gray));
			}
			.accent:hover h4,
			.accent h4:hover  {
				color: rgb(var(--accent));
			}
			.accent:hover .date {
				color: rgb(var(--accent));
			}
			.accent:hover img {
				box-shadow: var(--box-shadow);
			}
			
		</style>
	</head>
	<body>
		<Header />
		<main>
			<div class="">
				<div class="">
					<!-- <h3>Total Post: {postCount}</h3> -->
					<section>
						<ul class="w-auto overflow-y-auto 	 max-h-[80rem]">
							{
								posts.map((post) => {
									const parser = new MarkdownIt();
									const createExcerpt = (body) => {
									return parser
										.render(body)
										.split('\n')
										.slice(0, 6)
										.map((str) => {
										return str.replace(/<\/?[^>]+(>|$)/g, '').split('\n');
										})
										.flat()
										.join(' ');
									};						
									const excerpt = `${createExcerpt(post.body).substring(0, 100)}...`;
									//console.log(excerpt);													
									return(<li >
										<a class=" accent w-[55rem]" href={`${basePath}/blog/${post.slug}/`}>
											<img  class=" object-cover" src={basePath+post.data.heroImage} alt="" />
											<div class=" block px-3">
												<h4 class="title py-2">{post.data.title}</h4>
												<div class="flex flex-wrap gap-1">	
													<h5 class=" text-xs font-mono font-bold">KEYWORDS: </h5>
													{post.data.keywords?.map(k => (
														<h6 class=" text-xs font-mono font-bold">{k},</h6>	
													))
													}
												</div>
												{/* <p class="date">
													<FormattedDate date={post.data.pubDate} />
												</p> */}
												<p class=" text-black">{excerpt}</p>
											</div>

										</a>
									</li>)
								})
							}
						</ul>
					</section>
				</div>
			</div>
		</main>
		<Footer />
	</body>
</html>
